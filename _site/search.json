[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take-Home_Ex01",
    "section": "",
    "text": "The task is to use Age-Sex pyramid to create analytical visualisation to reveal the structure of population by gender and age group.\nThe data used in this task is ’Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022’, which can be found on Department of Statistics, Singapore website. Navigate to ‘Find Data > Search by Theme > Population > Geographic Distribution > Latest Data’ under Population Trends or use the linkhttps://www.singstat.gov.sg/find-data/search-by-theme/population/geographic-distribution/latest-data to directly go to the page.\nThis data is used to find the demographic structure of Singapore at planning level by using age-sex pyramid method in trellis display style. Out of all the available planning level areas in the data set, I have decided to choose these 9 areas for trellis style display - ‘Ang Mo Kio’, ‘Bedok’, ‘Chao Chu Kang’, ‘Jurong West’, ‘Pungol’, ‘Sengkang’, ‘Tampines’, ‘Woodlands’, ‘Yishun’."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#step-1-get-the-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#step-1-get-the-data",
    "title": "Take-Home_Ex01",
    "section": "Step 1: Get the data",
    "text": "Step 1: Get the data\nNavigate to https://www.singstat.gov.sg/find-data/search-by-theme/population/geographic-distribution/latest-data and download the csv version of Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022 from under Population Trends.\nTransfer this csv to appropriate location inside folder where the tableau file will also be stored so that they can be easily accessed."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#step-2-create-new-tableau-book",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#step-2-create-new-tableau-book",
    "title": "Take-Home_Ex01",
    "section": "Step 2: Create New tableau Book",
    "text": "Step 2: Create New tableau Book\nOpen tableau and Click on File > New.\nSave this book to the same location as csv file.\nClick on Connect Data and pick text file.\nA prompt will appear, select the csv file and click open.\n\nNow the data from the csv file is available to be used in this workbook. Some sample fields and data from the csv will also appear after the successful data load.\n\nClick on Sheet 1 to enter Sheet1 where the Age-Sex Pyramid will be created.\nRename Sheet 1 to ‘Age-Sex Pyramid Singapore Planning Area’ for better understanding of the visualisation."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#step-3-create-visualisation",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#step-3-create-visualisation",
    "title": "Take-Home_Ex01",
    "section": "Step 3: Create Visualisation",
    "text": "Step 3: Create Visualisation"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-sum-of-males-and-females",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-sum-of-males-and-females",
    "title": "Take-Home_Ex01",
    "section": "1. Create Sum of Males and Females",
    "text": "1. Create Sum of Males and Females\nCreate Calculated Fields from the left pane as shown:\n\nFor Males,\nIF  [Sex] = \"Females\"\nTHEN [Pop]\nEND\nFor Females, IF  [Sex] = \"Females\"\nTHEN [Pop]\nEND"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-age-group",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-age-group",
    "title": "Take-Home_Ex01",
    "section": "2. Create Age Group",
    "text": "2. Create Age Group\nCreate a age group of 10 years instead of 5 years for better visualisation with following steps.\n\nSelect 2 groups at a time, click on Group and give it a name, e.g. Select 0_to_4 and 5_to_9 and name it 0-9. Rename common field name for this to AgeGroup\n\nCreate initial visualisation\nDrag and drop the Sum of females and males to Columns and AgeGroup to rows\n\nRight click on the X axis where Males is written and click on Edit Axis, there will be option to reverse axis. Check that box and return back.\n\nNow we have a pyramid but they both are in same color."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#change-color-code-for-better-visualisation",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#change-color-code-for-better-visualisation",
    "title": "Take-Home_Ex01",
    "section": "3. Change Color Code for better visualisation",
    "text": "3. Change Color Code for better visualisation\nFrom the options as seen below change the color to get different color for Males and Females"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-row-and-column-axis-for-trellis-display",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-row-and-column-axis-for-trellis-display",
    "title": "Take-Home_Ex01",
    "section": "4. Create Row and Column Axis for trellis display",
    "text": "4. Create Row and Column Axis for trellis display\nCreate a Parameter NumberOfColumns as 3 to get 3 columns. To create a Parameter, we get the option right next to create calculated field. It should look like this:\n\nCreate 3 calculated Fields, similar to as done for Sum of Males and Females.\nFor Column,\nIF [Index] % [NumberOfColumns] = 0\nTHEN [NumberOfColumns]\nELSE [Index] % [NumberOfColumns]\nEND\nFor Row\nINT(([Index]-1)/[NumberOfColumns])\nFor Index\nINDEX()\nSelect both the Rows and Columns and convert it to Discrete\n\nDrag Rows to Rows and Columns to Columns located to top bar to add it on view\nDrag PA to Details in Marks (All) Section.\nCompute Row and Column using PA to get the trellis view."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#filter-planning-area-to-select-9-locations",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#filter-planning-area-to-select-9-locations",
    "title": "Take-Home_Ex01",
    "section": "5. Filter Planning Area to select 9 locations",
    "text": "5. Filter Planning Area to select 9 locations\nDrap PA to filter and select the 9 locations and click OK to filter."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#remove-row-and-column-header-from-visualisation-for-cleanup.",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#remove-row-and-column-header-from-visualisation-for-cleanup.",
    "title": "Take-Home_Ex01",
    "section": "6. Remove Row and Column Header from visualisation for cleanup.",
    "text": "6. Remove Row and Column Header from visualisation for cleanup."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-label-for-each-cell-location-and-add-visualisaion-enhancements",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-label-for-each-cell-location-and-add-visualisaion-enhancements",
    "title": "Take-Home_Ex01",
    "section": "7. Create Label for each cell Location and add Visualisaion enhancements",
    "text": "7. Create Label for each cell Location and add Visualisaion enhancements\nCreate another Calculated field called PALabel as\nIF FIRST()=0 THEN WINDOW_MAX(ATTR([PA])) END\nAdd it to SUM(Females) marks.\nAdd Sum(Females) to Sum(Females) marks and Sum(Males) to Sum(Males) marks respectively and adjust the visualisation using the tools inside the Marks until satisfied."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#extract-data-before-uploading-to-tableau-public",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#extract-data-before-uploading-to-tableau-public",
    "title": "Take-Home_Ex01",
    "section": "8. Extract data before uploading to Tableau Public",
    "text": "8. Extract data before uploading to Tableau Public\nOnce ready to upload the visualisation to Tableau Public, extract data as shown. Best practice is to provide location same as other files of the same project."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#publish-to-tableau-public",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#publish-to-tableau-public",
    "title": "Take-Home_Ex01",
    "section": "10. Publish to Tableau Public",
    "text": "10. Publish to Tableau Public\nSelect Publish Workbook as shown to publish the visualisation to Tableau Public"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html",
    "title": "In-Class_Ex03",
    "section": "",
    "text": "Installing and Loading R packages\nTwo packages will be installed and loaded. Try are tidyverse, ggiraph.\n\npacman::p_load(ggiraph, tidyverse)\n\nImporting data\n\nexam_data <- read_csv(\"../data/Exam_data.csv\")\n\n\nggplot(data=exam_data, aes(x=MATHS)) + geom_dotplot(dotsize=0.5)\n\n\n\n\n\np <- ggplot(data=exam_data, aes(x=MATHS)) + geom_dotplot_interactive(aes(tooltip=ID), stackgroups=TRUE, binwidth=1, method=\"histodot\") + scale_y_continuous(NULL, breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Take-Home-Ex02",
    "section": "",
    "text": "In this task, we have to utilize the visualization done in Take-Home Exercise 1 by our classmate and critique on it in terms of clarity and aesthetics.\nWe also need to sketch alternative design using best design principles and practices learned in Lessons. For this remake, we will be taking help of R and some packages like ggplot2, tidyverse etc."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#clarity-and-aesthetics",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#clarity-and-aesthetics",
    "title": "Take-Home-Ex02",
    "section": "Clarity And Aesthetics",
    "text": "Clarity And Aesthetics\n\nTitle and Heading\nTitle and Heading is clear and concise and represents exactly what it means.\n\n\nAxes\nAxes are defined properly in both data as well as visualization. But the data-table have age group in x-axis whereas pyramid have age group in y-axis. It can be synchronized to get age group in x-axis in both the sections.\n\n\nLegend\nFor the age-sex pyramid, there is a legend to show “Males” and “Females” colors but it is also displayed on the axis. Legend can be removed to give more space for pyramid which can make it more clear.\n\n\nRow and Column Heading\nThe age-sex pyramid have extra row and column heading which contains serial number. It can be removed as it is not relevant to the visualization.\n\n\nColor Selection\nColor selection for the Males and Females are a bit off. It can be changed to more brighter color to make it more attractive to eyes.\n\n\nData Table\nAs a good visualization practice, details should be on-demand. If we hover the age-sex pyramid we can get the exact values, hence the data table can be removed so that pyramids can take whole width and be more clear and easy to read."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#load-the-required-packages",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#load-the-required-packages",
    "title": "Take-Home-Ex02",
    "section": "Load the required packages",
    "text": "Load the required packages\nLoad the required packages, i.e., “ggiraph”, “tidyverse”\n\npacman::p_load(ggiraph, tidyverse)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#load-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#load-data",
    "title": "Take-Home-Ex02",
    "section": "Load Data",
    "text": "Load Data\nLoad the data from the csv file into data variable\n\ndata <- read_csv(\"respopagesextod2022.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#cleanup-and-organise-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#cleanup-and-organise-data",
    "title": "Take-Home-Ex02",
    "section": "Cleanup and Organise Data",
    "text": "Cleanup and Organise Data\n\nMutate the data to get ’AgeGroup’ where we store age group of 10 years each instead of 5 years.\nFilter the columns to have PA, AgeGroup, Sex, Pop only as these are the only columns we need.\nFilter the data set to have only 9 Planning Areas for trellis display.\nGroup the data set in terms of PA, AgeGroup, Sex and summarize the Population by calculating Sum of Pop column\nAs we need the males on left and females on right of pyramid, change all the male population sum to negative value.\nArrange the data in terms of descending AgeGroup\n\n\ndata <- data %>%\n  mutate(AgeGroup= ifelse(AG=='0_to_4'|AG=='5_to_9', '0-9', AG)) %>%\n  mutate(AgeGroup= ifelse(AG=='10_to_14'|AG=='15_to_19', '10-19', AgeGroup)) %>%\n  mutate(AgeGroup= ifelse(AG=='20_to_24'|AG=='25_to_29', '20-29', AgeGroup)) %>%\n  mutate(AgeGroup= ifelse(AG=='30_to_34'|AG=='35_to_39', '30-39', AgeGroup)) %>%\n  mutate(AgeGroup= ifelse(AG=='40_to_44'|AG=='45_to_49', '40-49', AgeGroup)) %>%\n  mutate(AgeGroup= ifelse(AG=='50_to_54'|AG=='55_to_59', '50-59', AgeGroup)) %>%\n  mutate(AgeGroup= ifelse(AG=='60_to_64'|AG=='65_to_69', '60-69', AgeGroup)) %>%\n  mutate(AgeGroup= ifelse(AG=='70_to_74'|AG=='75_to_79', '70-79', AgeGroup)) %>%\n  mutate(AgeGroup= ifelse(AG=='80_to_84'|AG=='85_to_89', '80-89', AgeGroup)) %>%\n  select(PA, AgeGroup, Sex, Pop) %>%\n  filter(PA=='Bedok'| PA=='Choa Chu Kang' | PA=='Hougang' | PA=='Jurong West' | PA=='Punggol' | PA=='Sengkang' | PA=='Tampines' | PA=='Woodlands' | PA=='Yishun' ) %>%\n  group_by(PA, AgeGroup, Sex) %>%\n  summarise(Population = sum(Pop)) %>%\n  mutate(Population = ifelse(Sex=='Females', Population, Population*-1)) %>%\n  arrange(desc(AgeGroup))\n\nNow the data set looks like this ->\n\nhead(data, 10)\n\n# A tibble: 10 × 4\n# Groups:   PA, AgeGroup [5]\n   PA            AgeGroup    Sex     Population\n   <chr>         <chr>       <chr>        <dbl>\n 1 Bedok         90_and_over Females       1440\n 2 Bedok         90_and_over Males         -660\n 3 Choa Chu Kang 90_and_over Females        430\n 4 Choa Chu Kang 90_and_over Males         -150\n 5 Hougang       90_and_over Females        900\n 6 Hougang       90_and_over Males         -330\n 7 Jurong West   90_and_over Females        610\n 8 Jurong West   90_and_over Males         -200\n 9 Punggol       90_and_over Females        270\n10 Punggol       90_and_over Males          -80"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plot-the-dataset",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plot-the-dataset",
    "title": "Take-Home-Ex02",
    "section": "Plot the dataset",
    "text": "Plot the dataset\nNow plot the data using ggplot, we put AgeGroup on y axis, Population on x axis.\nUse geom_col_interactive to show the pyramid chart with interactivity where we can hover to see the exact values.\ntooltip and paste to properly structure the data value and display details.\nscale_fill_manual to change color for Males and Females.\nscale_x_continuous to adjust the x axis labels and provide manual details.\nggtitle to give title to visualization. facet_wrap to create trellis style model.\nAdd some theme and adjustments to the visualization to make it look clear and concise.\n\npyramid <- ggplot(data=data, aes(y=AgeGroup, x=Population)) + geom_col_interactive(stat = \"identity\", aes(fill=Sex, tooltip=paste(\n  paste(\"Age Group:   \", AgeGroup), \n  paste(\"Planning Area:   \", PA), \n  paste(\"Sex:   \", Sex), \n  paste(\"Population:   \", ifelse(Sex=='Males', Population*-1, Population)), \n  sep = \"\\n\" \n  ))) + \n  scale_fill_manual(values=c(\"Males\" = \"#6CA8E8\", \"Females\" = \"#F987B1\")) + \n  scale_x_continuous(breaks = c(-20000, -10000, 0, 10000, 20000),\n                     labels = c(\"20k\", \"10k \\nMale\", \"0\", \"10k \\nFemale\", \"20k\")) +\n  ggtitle(label = \"Singapore Residents by Planning Area, Age Group, Sex June 2022\", subtitle = \"Top 9 Highest Population By Planning Area, Singapore\") + \n  facet_wrap(~ PA) + theme(legend.position = \"none\", plot.title = element_text(size=26, face = \"bold\", hjust = 0.9), plot.subtitle = element_text(size=20, hjust = 0.5))\ngirafe(\n  ggobj = pyramid,\n  width_svg = 12,\n  height_svg = 12*0.618\n)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plot-the-data-set",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plot-the-data-set",
    "title": "Take-Home-Ex02",
    "section": "Plot the data set",
    "text": "Plot the data set\nNow plot the data using ggplot, we put AgeGroup on y axis, Population on x axis.\n\nUse geom_col_interactive to show the pyramid chart with interactivity where we can hover to see the exact values.\ntooltip and paste to properly structure the data value and display details.\nscale_fill_manual to change color for Males and Females.\nscale_x_continuous to adjust the x axis labels and provide manual details.\nggtitle to give title to visualization. facet_wrap to create trellis style model.\nAdd some theme and adjustments to the visualization to make it look clear and concise.\n\n\npyramid <- ggplot(data=data, aes(y=AgeGroup, x=Population)) + geom_col_interactive(stat = \"identity\", aes(fill=Sex, tooltip=paste(\n  paste(\"Age Group:   \", AgeGroup), \n  paste(\"Planning Area:   \", PA), \n  paste(\"Sex:   \", Sex), \n  paste(\"Population:   \", ifelse(Sex=='Males', Population*-1, Population)), \n  sep = \"\\n\" \n  ))) + \n  scale_fill_manual(values=c(\"Males\" = \"#6CA8E8\", \"Females\" = \"#F987B1\")) + \n  scale_x_continuous(breaks = c(-20000, -10000, 0, 10000, 20000),\n                     labels = c(\"20k\", \"10k \\nMale\", \"0\", \"10k \\nFemale\", \"20k\")) +\n  ggtitle(label = \"Singapore Residents by Planning Area, Age Group, Sex June 2022\", subtitle = \"Top 9 Highest Population By Planning Area, Singapore\") + \n  facet_wrap(~ PA) + theme(legend.position = \"none\", plot.title = element_text(size=26, face = \"bold\", hjust = 0.9), plot.subtitle = element_text(size=20, hjust = 0.5))\ngirafe(\n  ggobj = pyramid,\n  width_svg = 12,\n  height_svg = 12*0.618\n)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "title": "In-Class_Ex04",
    "section": "",
    "text": "pacman::p_load(plotly, DT, patchwork, tidyverse, ggstatsplot, readxl, performance, parameters, see)\n\n\nexam_data <- read_csv('../data/Exam_data.csv')\n\n\nplot_ly(data = exam_data, x=~ENGLISH, y = ~MATHS, color = ~RACE) #<<\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n            aes(x=MATHS, y=ENGLISH)) + \n  geom_point(dotsize=1) + \n  coord_cartesian(xlim=c(0,100), ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\nggbetweenstats(\n  data=exam_data,\n  x=GENDER,\n  y=MATHS,\n  type=\"p\",\n  message=FALSE\n)\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\ncar_resale <- read_xls(\"../data/ToyotaCorolla.xls\", \"data\")\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\nmodel1 <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n <- check_normality(model1)\nplot(check_n)\n\n\n\n\n\nmy_sum <- exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438 \n  \n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "title": "Take-Home_Ex03",
    "section": "",
    "text": "To uncover the salient patterns of resale prices of public housing property using appropriate analytical visualisation techniques. For this task, the focus is on 3-ROOM, 4-ROOM and 5-ROOM types in 2022"
  },
  {
    "objectID": "Testing/Testing1.html",
    "href": "Testing/Testing1.html",
    "title": "Testing",
    "section": "",
    "text": "pacman::p_load(tidyverse)\n\n\nBlogs <- read_csv('ZindiNewUserEngagementPredictionChallenge/Blogs.csv')\n\nRows: 117 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): blog_ID\ndbl  (4): Theme, Published At Year, Published At Month, Published At Day_of_...\ntime (1): Published At time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nComments <- read_csv('ZindiNewUserEngagementPredictionChallenge/Comments.csv')\n\nRows: 467 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Disc_ID, User_ID\ndbl  (3): Created At Year, Created At Month, Created At Day_of_month\ntime (1): Created At time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCompetition  <- read_csv('ZindiNewUserEngagementPredictionChallenge/Competition.csv')\n\nRows: 247 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (7): FeatureA, FeatureB, FeatureF, FeatureG, FeatureH, Country_ID, Com...\ndbl  (11): FeatureC, FeatureD, FeatureE, SecretCode, FeatureI, End Time Year...\ntime  (2): End Time time, Start Time time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCompetitionParticipation <- read_csv('ZindiNewUserEngagementPredictionChallenge/CompetitionPartipation.csv')\n\nRows: 8385 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): Competition ID, Successful Submission Count, User_ID\ndbl  (4): Participant Type, Created At Year, Created At Month, Created At Da...\ntime (1): Created At time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nDiscussion <- read_csv('ZindiNewUserEngagementPredictionChallenge/Discussion.csv')\n\nRows: 1439 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): Competition ID, Disc_ID, User_ID\ndbl  (5): Personal, Theme, Created At Year, Created At Month, Created At Day...\ntime (1): Created At time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nJobs <- read_csv('ZindiNewUserEngagementPredictionChallenge/Jobs.csv')\n\nRows: 34 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): Experience, Industry, Employment Type, Company Size, Data Science F...\nlgl (1): Remote\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nSampleSubmission  <- read_csv('ZindiNewUserEngagementPredictionChallenge/SampleSubmission.csv')\n\nRows: 1340 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): User_ID_Next_month_Activity\ndbl (1): Active\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nUserActivity   <- read_csv('ZindiNewUserEngagementPredictionChallenge/UserActivity.csv')\n\nRows: 317292 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): User_ID, Title\ndbl  (3): datetime Year, datetime Month, datetime Day_of_month\ntime (1): datetime time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nUsers <- read_csv('ZindiNewUserEngagementPredictionChallenge/Users.csv')\n\nRows: 12413 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): User_ID, Countries_ID\ndbl  (5): FeatureX, FeatureY, Created At Year, Created At Month, Created At ...\ntime (1): Created At time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "pacman::p_load(corrplot, tidyverse, ggstatsplot)\n\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\n\npairs(wine[,1:11])\n\n\n\n\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "Loading Packages\n\npacman::p_load(tidyverse, ggiraph, plotly, gganimate, gifski, gapminder, readxl, rPackedBar)\n\n\nThe downloaded binary packages are in\n    /var/folders/ww/j00nhnk94cj6ylcjzs1rcx9c0000gn/T//RtmpPDOiex/downloaded_packages\n\nThe downloaded binary packages are in\n    /var/folders/ww/j00nhnk94cj6ylcjzs1rcx9c0000gn/T//RtmpPDOiex/downloaded_packages\n\nThe downloaded binary packages are in\n    /var/folders/ww/j00nhnk94cj6ylcjzs1rcx9c0000gn/T//RtmpPDOiex/downloaded_packages\n\nThe downloaded binary packages are in\n    /var/folders/ww/j00nhnk94cj6ylcjzs1rcx9c0000gn/T//RtmpPDOiex/downloaded_packages\n\n\n\n\nLoading Exam Data\n\nexam_data <- read_csv('../data/Exam_data.csv')\n\n\n\nInteractive GGPlot\nggplot dot plot with tooltip as ID\n\np <- ggplot(data = exam_data,\n            aes(x = MATHS)) + \n  geom_dotplot_interactive(\n    aes(tooltip=ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") + \n  scale_y_continuous(NULL, breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\nCustom Tooltip with custom CSS\n\ntooltip_css <- \"background-color: white; font-style: bold; color: black;\"\nexam_data$tooltip <- c(paste0(\n  \"Name = \", exam_data$ID,\n  \"\\n Class = \", exam_data$CLASS\n))\np <- ggplot(data = exam_data,\n            aes(x = MATHS)) + \n  geom_dotplot_interactive(\n    aes(tooltip=exam_data$tooltip),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") + \n  scale_y_continuous(NULL, breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css=tooltip_css)\n  )\n)\n\n\n\n\n\nStatistics on Tooltip\n\ntooltip <- function(y, ymax, accuracy=0.01){\n  mean <- scales::number(y, accuracy=accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=exam_data, aes(x=RACE))+\n  stat_summary(aes(y=MATHS, tooltip=after_stat(tooltip(y, ymax))),\n               fun.data = \"mean_se\",\n               geom = GeomInteractiveCol,\n               fill=\"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n               fun.data = mean_se,\n               geom = \"errorbar\", width=0.2, line_width=0.2)\n\ngirafe(ggobj=gg_point, width_svg = 8, height_svg = 8*0.618)\n\n\n\n\n\nInteractive Tooltip\n\np <- ggplot(data=exam_data,\n            aes(x = MATHS)) + \n  geom_dotplot_interactive(\n    aes(tooltip = CLASS, data_id = CLASS),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\"\n  ) + \n  scale_y_continuous(NULL, \n                     breaks = NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(\n    opts_hover(css = \"opacity: #202020;\"),\n    opts_hover_inv(css = \"opacity: 0.2;\")\n  )\n)\n\n\n\n\n\nOn click functionality on dot\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\np <- ggplot(data=exam_data,\n            aes(x = MATHS)) + \n  geom_dotplot_interactive(\n    aes(onclick = onclick),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\"\n  ) + \n  scale_y_continuous(NULL, \n                     breaks = NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\np1 <-ggplot(data = exam_data,\n            aes(x = MATHS)) + \n  geom_dotplot_interactive(aes(data_id = ID),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL, breaks = NULL)\n\n\np2 <-ggplot(data = exam_data,\n            aes(x = ENGLISH)) + \n  geom_dotplot_interactive(aes(data_id = ID),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(code = print(p1 / p2), width_svg = 6, height_svg = 6, options = list( opts_hover(css = “fill: #202020;”), opts_hover_inv(css = “opacity: 0.2;”) ))\n\n\n“Plotly” to demo Interactive Visualisation\nload data on plotly and use colors\n\nplot_ly(data = exam_data, \n        x = ~MATHS, y = ~ENGLISH, color = ~RACE, colors = \"Set1\")\n\n\n\n\n\nAdd colors to manually, Custom tooltip, Add title to visualisation.\n\npal <- c(\"red\", \"purple\", \"blue\", \"green\")\nplot_ly(data = exam_data, \n        x = ~MATHS, y = ~ENGLISH, \n        text = ~paste(\"Student ID: \", ID,\n                      \"\\nClass: \", CLASS),\n        color = ~RACE, colors = pal) %>%\n  layout(title = 'English Score vs Maths Score',\n         xaxis = list(range = c(0,100)),\n         yaxis = list(range = c(0,100)))\n\n\n\n\n\n\n\nUse ggplotly for interactive visualisation\n\np <- ggplot(data=exam_data,\n            aes(x = MATHS, y = ENGLISH)) + \n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\nggplotly(p)\n\n\n\n\n\nMultiple ggplotly visualisation using subplot\n\np1 <- ggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) + \n  geom_point(size = 1) + \n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\np2 <- ggplot(data = exam_data, aes(x = MATHS, y = SCIENCE)) + \n  geom_point(size = 1) + \n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\nsubplot(ggplotly(p1), ggplotly(p2))\n\n\n\n\n\nhighligh_key to provide coordination in multiple ggplotly visualisation\n\nd <- highlight_key(exam_data)\np1 <- ggplot(data = d, aes(x = MATHS, y = ENGLISH)) + \n  geom_point(size = 1) + \n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\np2 <- ggplot(data = d, aes(x = MATHS, y = SCIENCE)) + \n  geom_point(size = 1) + \n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\nsubplot(ggplotly(p1), ggplotly(p2))\n\n\n\n\n\n\n\nDatatable\n\nDT::datatable(exam_data, class=\"compact\")\n\n\n\n\n\n\nHighlight_key and bscols to provide coordination between table and ggplotly\n\nd <- highlight_key(exam_data)\n\np <- ggplot(d, aes(ENGLISH, MATHS)) + \n  geom_point(size=1) + \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg <- highlight(ggplotly(p), \"plotly_selected\")\n\ncrosstalk::bscols(gg, DT::datatable(d), widths = 5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnimated Data Visualisation\nRead and mutate excel data\n\ncol <- c(\"Country\", \"Continent\")\n\nglobalPop <- read_xls(\"../data/GlobalPopulation.xls\", sheet = \"Data\") %>%\n  mutate_each(funs(factor(.)), col) %>%\n  mutate(Year = as.integer(Year))\n\nggplot to show geom_point plot visualisation\n\nggplot(globalPop, aes(x = Old, y = Young, size = Population, color = Country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_color_manual(values = country_colors) + \n  scale_size(range = c(2, 12)) +\n  labs(title = \"Year: {frame_time}\",\n       x = \"% Aged\",\n       y = \"% Young\")\n\n\n\n\nAdd transation and ease animation\n\nggplot(globalPop, aes(x = Old, y = Young, size = Population, colour = Country)) + \n  geom_point(alpha = 0.7, show.legend = FALSE) + \n  scale_colour_manual(values = country_colors) + \n  scale_size(range = c(2,12)) +\n  labs(title = \"Years: {frame_time}\",\n       x = \"% Aged\",\n       y = \"% Young\") + \n  transition_time(Year) +\n  ease_aes('linear')\n\nNULL\n\n\n\n\nVisualising Large Data Interactively\nLoad data GDP and WorldCountry\n\nGDP <- read_csv('../data/GDP.csv')\nWorldCountry <- read_csv('../data/WorldCountry.csv')\n\nMutate and join data\n\nGDP_selected <- GDP %>%\n  mutate(Values = as.numeric(`2020`)) %>%\n  select(1:3, Values) %>%\n  pivot_wider(names_from = `Series Name`,\n              values_from = `Values`) %>%\n  left_join(y=WorldCountry, by = c(\"Country Code\" = \"ISO-alpha3 Code\"))\n\nFilter data and omit NA values\n\nGDP_selected <- GDP %>%\n  mutate(GDP = as.numeric(`2020`)) %>%\n  filter(`Series Name` == \"GDP (current US$)\") %>%\n  select(1:2, GDP) %>%\n  na.omit()\n\nPlot packed bar visualisation\n\np = plotly_packed_bar(\n  input_data = GDP_selected,\n  label_column = \"Country Name\",\n  value_column = \"GDP\",\n  number_rows = 10,\n  plot_title = \"Top 10 countries by GDP, 2020\",\n  xaxis_label = \"GDP (US$)\",\n  hover_label = \"GDP\",\n  min_label_width = 0.018,\n  color_bar_color = \"#00aced\",\n  label_color = \"white\")\nplotly::config(p, displayModeBar = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(\n  ggstatsplot, tidyverse, readxl, performance, parameters, see, #For 4.1\n  plotly, crosstalk, DT, ggdist, gganimate, #For 4.2\n  FunnelPlotR,knitr #For 4.3\n               )\n\n\n\n\n\nexam <- read_csv('../data/Exam_data.csv')\n\n\n\n\n\n\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = GENDER,\n  y = MATHS,\n  type = \"np\",\n  message = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = RACE,\n  y = ENGLISH,\n  type = 'p',\n  mean.ci = TRUE,\n  pairwise_comparisons = TRUE,\n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE\n)\n\n\n\n\n\n\n\n\nLoading data with mutation\n\nexam1 <- exam %>%\n  mutate(MATHS_bins = cut(MATHS, breaks = c(0, 60, 75, 85, 100)))\n\n\n\n\nggbarstats(exam1, x = MATHS_bins, y = GENDER)\n\n\n\n\n\n\n\n\nLoading car_resale data\n\ncar_resale <- read_xls(\"../data/ToyotaCorolla.xls\", \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + Weight + Guarantee_Period, data = car_resale)\ncheck_n <- check_normality(model1)\nplot(check_n)\n\n\n\n\n\n\n\n\ncheck_h <- check_heteroscedasticity(model1)\nplot(check_h)\n\n\n\n\n\n\n\n\ncheck_model(model1)\n\n\n\n\n\n\n\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\nggcoefstats(model1, output=\"plot\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#loading-packages-needed-for-this-task",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#loading-packages-needed-for-this-task",
    "title": "Take-Home_Ex03",
    "section": "Loading Packages needed for this task",
    "text": "Loading Packages needed for this task\n\npacman::p_load(tidyverse, ggstatsplot, performance, gganimate, gifski, ggridges)\n\n\nThe downloaded binary packages are in\n    /var/folders/ww/j00nhnk94cj6ylcjzs1rcx9c0000gn/T//RtmpGjWoe9/downloaded_packages"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#loading-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#loading-data",
    "title": "Take-Home_Ex03",
    "section": "Loading Data",
    "text": "Loading Data\n“Resale flat princes based on registration date from Jan-2017 onwards” Data is taken from Data.gov.sg and prepared for visualisation.\n\noriginalData <- read_csv('resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv')\n\nOriginal Data needs to be filtered for 3/4/5 Rooms and month should be from 2022 as required in this task. Remaining Lease is also rounded to year only in numeric for better use. As different rooms have different area, Price per square meter can give better estimates for trends.\n\ndata <- originalData %>% filter( flat_type %in% c('3 ROOM', '4 ROOM', '5 ROOM')) %>% filter(substr(month, 0, 4) == '2022' )\ndata$remainingLease = as.numeric(substr(data$remaining_lease,0,2))\ndata$pricePerSqm = data$resale_price / data$floor_area_sqm"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#datatable-to-display-the-final-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#datatable-to-display-the-final-data",
    "title": "Take-Home_Ex03",
    "section": "Datatable to display the final data",
    "text": "Datatable to display the final data\nDatatable below shows the final mutated, filtered data which will be used later in visualisation.\n\nDT::datatable(data, class=\"compact\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#one-sample-test-gghistostats-method",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#one-sample-test-gghistostats-method",
    "title": "Take-Home_Ex03",
    "section": "One-sample Test: gghistostats() method",
    "text": "One-sample Test: gghistostats() method\nOne-sample test is done on pricePerSqm\nHistogram of dataset\n\nset.seed(1234)\n\ngghistostats(\n  data = data,\n  x = pricePerSqm,\n  type = \"bayes\",\n  test.value = 5700,\n  xlab = \"Resale Price per sq m\"\n)\n\n\n\n\nIt can be seen that highest proportion of resale price the property around 4.9k per sq meter."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#two-sample-mean-test-ggbetweenstats",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#two-sample-mean-test-ggbetweenstats",
    "title": "Take-Home_Ex03",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\nTwo sample mean test is done on data of flat_type and pricePerSqm\n\nggbetweenstats(\n  data = data,\n  x = flat_type, \n  y = pricePerSqm,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\nThere are slight variation in the price per sq m in different flat types. The median of 3 and 4 rooms are higher than 5 room, it can signify that people prefer 3-4 rooms as compared to 5 rooms, as the demand goes up, the price also goes up along with that. It can show that Singapore has more nuclear family where 3-4 rooms are enough for them."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Take-Home_Ex03",
    "section": "Oneway ANOVA Test: ggbetweenstats() method",
    "text": "Oneway ANOVA Test: ggbetweenstats() method\nVisual for One-way ANOVA Test on flat_type and pricePerSqm\n\nggbetweenstats(\n  data = data,\n  x = flat_type, \n  y = pricePerSqm,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\nIt can be seen that 4 Room are the highest priced whereas 5 room have lower price which can means 5 rooms are lower in demand compared to 3-4 rooms. It can be insightful for analysis on Singapore’s budget and requirements on housing and"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#ggscatterstats",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#ggscatterstats",
    "title": "Take-Home_Ex03",
    "section": "ggscatterstats()",
    "text": "ggscatterstats()\nggscatterstats is used to see the relation between pricePerSqm and Remaining Lease.\n\nggscatterstats(\n  data = data,\n  x = remainingLease,\n  y = pricePerSqm,\n  marginal = FALSE,\n  )\n\n\n\n\nIt can be seen that prices have significant variation below 40 and more than 85. As prices are much higher when lease is more than 85 years. The price tend to be lower if the lease is less than 40 years left."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Take-Home_Ex03",
    "section": "Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "Significant Test of Association (Depedence) : ggbarstats() methods\nData mutation before ggbarstats() is used.\n\ndata1 <- data %>% \n  mutate(remainingLease_bins = \n           cut(remainingLease, \n               breaks = c(0,40, 60,80, 100))\n)\n\n\nggbarstats(data1, \n           x = remainingLease_bins, \n           y = flat_type)\n\n\n\n\nRemaining Lease is divided into 3 categories (i.e. 40-60, 60-80, 80-100).\n3 Room have half of the rooms under 40-60 years lease left, i.e. on the lower end of the remaining lease. whereas 4 and 5 Rooms type have good no of years of years left on lease as only 9-10% only have less than 60 years on lease and majority are in 60-100 years of lease."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#storey_range-in-each-part-of-town",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#storey_range-in-each-part-of-town",
    "title": "Take-Home_Ex03",
    "section": "Storey_range in each part of town",
    "text": "Storey_range in each part of town\n\nggscatterstats(\n  data = data,\n  x = storey_range,\n  y = town,\n  marginal = FALSE\n) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nIt can be seen here that places like Central Area have higher stories compared to Tampines and Serangoon. This can also impact the resale price."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#proportion-of-different-room-types-in-each-town-area",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#proportion-of-different-room-types-in-each-town-area",
    "title": "Take-Home_Ex03",
    "section": "Proportion of different Room Types in each town area",
    "text": "Proportion of different Room Types in each town area\n\nggplot(data = data, aes(y = town)) + geom_bar(aes(fill=flat_type))\n\n\n\n\nDifferent town areas have different proportion of room types. 4 room type is quite common in most of the areas."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#prices-in-different-areas-of-town",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#prices-in-different-areas-of-town",
    "title": "Take-Home_Ex03",
    "section": "Prices in different areas of town",
    "text": "Prices in different areas of town\n\nggplot(data,\n       aes(x = pricePerSqm, y = town, fill =town)) +\n  geom_density_ridges(alpha = 0.5) + \n  theme_ridges() + \n  labs(\"Price per sq m in different areas of town\") + \n  theme(legend.position = \"none\") + \n  labs(x = \"Price per sq m\", y = \"Area\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#multiple-regression-model-using-lm",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#multiple-regression-model-using-lm",
    "title": "Take-Home_Ex03",
    "section": "Multiple Regression Model using lm()",
    "text": "Multiple Regression Model using lm()\n\nmodel <- lm(formula = resale_price ~ town + flat_type + storey_range + flat_model + remainingLease,\n            data = data)\nmodel\n\n\nCall:\nlm(formula = resale_price ~ town + flat_type + storey_range + \n    flat_model + remainingLease, data = data)\n\nCoefficients:\n                     (Intercept)                         townBEDOK  \n                          151789                            -34537  \n                      townBISHAN                   townBUKIT BATOK  \n                           97118                            -76741  \n                 townBUKIT MERAH                 townBUKIT PANJANG  \n                           81728                           -142853  \n                 townBUKIT TIMAH                  townCENTRAL AREA  \n                          158965                             83015  \n               townCHOA CHU KANG                      townCLEMENTI  \n                         -159908                              7248  \n                     townGEYLANG                       townHOUGANG  \n                           19553                            -79871  \n                 townJURONG EAST                   townJURONG WEST  \n                          -87367                           -137464  \n             townKALLANG/WHAMPOA                 townMARINE PARADE  \n                           51077                            124002  \n                   townPASIR RIS                       townPUNGGOL  \n                          -80850                           -144531  \n                  townQUEENSTOWN                     townSEMBAWANG  \n                           76228                           -160337  \n                    townSENGKANG                     townSERANGOON  \n                         -154550                              5026  \n                    townTAMPINES                     townTOA PAYOH  \n                          -46388                             45546  \n                   townWOODLANDS                        townYISHUN  \n                         -145739                           -113317  \n                 flat_type4 ROOM                   flat_type5 ROOM  \n                          129210                            280276  \n            storey_range04 TO 06              storey_range07 TO 09  \n                           16567                             30470  \n            storey_range10 TO 12              storey_range13 TO 15  \n                           36678                             46623  \n            storey_range16 TO 18              storey_range19 TO 21  \n                           68597                             95913  \n            storey_range22 TO 24              storey_range25 TO 27  \n                          110792                            127522  \n            storey_range28 TO 30              storey_range31 TO 33  \n                          166218                            154948  \n            storey_range34 TO 36              storey_range37 TO 39  \n                          174175                            180544  \n            storey_range40 TO 42              storey_range43 TO 45  \n                          230585                            215197  \n            storey_range46 TO 48              storey_range49 TO 51  \n                          351569                            263738  \n         flat_modelAdjoined flat                    flat_modelDBSS  \n                            5027                             69916  \n              flat_modelImproved     flat_modelImproved-Maisonette  \n                          -65080                            166431  \n               flat_modelModel A      flat_modelModel A-Maisonette  \n                          -12830                            153437  \n              flat_modelModel A2          flat_modelNew Generation  \n                          -42080                            -26413  \n     flat_modelPremium Apartment  flat_modelPremium Apartment Loft  \n                          -12040                            164799  \n            flat_modelSimplified                flat_modelStandard  \n                          -54281                            -74066  \n               flat_modelTerrace                 flat_modelType S1  \n                          457746                            225949  \n               flat_modelType S2                    remainingLease  \n                          189946                              4244"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#model-diagnostic-checking-normality-assumption",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#model-diagnostic-checking-normality-assumption",
    "title": "Take-Home_Ex03",
    "section": "Model Diagnostic: checking normality assumption",
    "text": "Model Diagnostic: checking normality assumption\n\ncheck_c <- check_normality(model)\n\n\nplot(check_c)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Take-Home_Ex03",
    "section": "Model Diagnostic: Check model for homogeneity of variances",
    "text": "Model Diagnostic: Check model for homogeneity of variances\n\ncheck_h <- check_heteroscedasticity(model)\n\n\nplot(check_h)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#model-diagnostic-complete-check",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#model-diagnostic-complete-check",
    "title": "Take-Home_Ex03",
    "section": "Model Diagnostic: Complete check",
    "text": "Model Diagnostic: Complete check\n\ncheck_model(model)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html",
    "href": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html",
    "title": "In-Class_Ex05",
    "section": "",
    "text": "pacman::p_load(ggtern, plotly, tidyverse, corrplot, ggstatsplot, seriation, dendextend, heatmaply)\n\n\n\n\n\nwine <- read_csv(\"../data/wine_quality.csv\", show_col_types = FALSE)\n\n\npairs(wine[,2:12])\n\n\n\n\n\npanel.cor <- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr <- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr <- abs(cor(x, y, use=\"complete.obs\"))\ntxt <- format(c(r, 0.123456789), digits=digits)[1]\ntxt <- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)\n\n\n\n\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)\n\n\n\n\n\nwine.cor <- cor(wine[, 1:11])\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\npop_data <- read_csv(\"../data/respopagsex2000to2018_tidy.csv\") \n\n\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  pivot_wider(names_from = AG, \n              values_from = Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\n\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )\n\n\n\n\n\n\n\n\n\nwh <- read_csv(\"../data/WHData-2018.csv\")\nrow.names(wh) <- wh$Country\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)\n\n\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\nwh_heatmap <- heatmap(wh_matrix)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html",
    "href": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html",
    "title": "Take-Home_Ex04",
    "section": "",
    "text": "To uncover the impact of COVID-19 and global economic and political dynamic in 2022 on Singapore bilateral trade."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "pacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, tidyverse, readxl, knitr, data.table)\n\n\nattacks <- read_csv('../data/eventlog.csv')\n\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\n\nmake_hr_wkday <- function(ts, sc, tz){\n  real_times <- ymd_hms(ts, \n                        tz = tz[1],\n                        quiet = TRUE)\n  dt <- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n}\n\nwkday_levels <- c('Saturday', 'Friday', 'Thursday', 'Wednesday', 'Tuesday', 'Monday', 'Sunday')\n\n\nwkday_levels <- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks <- attacks %>%\n  group_by(tz) %>%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %>% \n  ungroup() %>% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11\n\n\n\n\n\n\ngrouped <- attacks %>% \n  count(wkday, hour) %>% \n  ungroup() %>%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\nattacks_by_country <- count(\n  attacks, source_country) %>%\n  mutate(percent = percent(n/sum(n))) %>%\n  arrange(desc(n))\n\n\ntop4 <- attacks_by_country$source_country[1:4]\ntop4_attacks <- attacks %>%\n  filter(source_country %in% top4) %>%\n  count(source_country, wkday, hour) %>%\n  ungroup() %>%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %>%\n  na.omit()\n\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )\n\n\n\n\n\nair <- read_excel(\"../data/arrivals_by_air.xlsx\")\n\n\nair$month <- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year <- year(ymd(air$`Month-Year`))\n\n\nVietnam <- air %>% \n  select(`Vietnam`, \n         month, \n         year) %>%\n  filter(year >= 2010)\n\n\nhline.data <- Vietnam %>% \n  group_by(month) %>%\n  summarise(avgvalue = mean(`Vietnam`))\n\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands-on_Ex07",
    "section": "",
    "text": "Choropleth Mapping with R\n\npacman::p_load(sf, tmap, tidyverse)\n\n\n#mpsz <- st_read(dsn = \"../data/geospatial\", layer = \"../data/geospatial/MP14_SUBZONE_WEB_PL\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#top-import-and-export-by-countries",
    "href": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#top-import-and-export-by-countries",
    "title": "Take-Home_Ex04",
    "section": "Top Import and Export by Countries",
    "text": "Top Import and Export by Countries\n\nImportExport\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMainland ChinaMalaysiaHong KongIndiaJapanTaiwanRepublic Of KoreaIndonesia\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAverage Import by SingaporeAverage Export from Singapore"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#loading-packages-needed-for-this-task",
    "href": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#loading-packages-needed-for-this-task",
    "title": "Take-Home_Ex04",
    "section": "Loading Packages needed for this task",
    "text": "Loading Packages needed for this task\n\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, tidyverse, readxl, knitr, data.table, CGPfunctions, ggplot2, plotly, ggHoriPlot)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#data-cleanup-steps",
    "href": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#data-cleanup-steps",
    "title": "Take-Home_Ex04",
    "section": "Data Cleanup steps",
    "text": "Data Cleanup steps\n\nData is imported to variables.\nPivot to rearrange as per needs.\nRename columns for ease of use in later stage.\nAll data is converted to be in Millions.\nRenaming Country values to remove units like Thousand Dollars/Million dollars.\nMutate to add year/month seperate from year-month format.\nFilter data to contain only 2020-2022 values.\nFor Slopegraph\n\n\nimportDataSlope <- read_xlsx(\"./data.xlsx\", \"Import\", range = \"A1:AL120\")\nexportDataSlope <- read_xlsx(\"./data.xlsx\", \"Export\", range = \"A1:AL92\")\n\nimportDataSlope <- importDataSlope %>%\n  pivot_longer(cols = 2:38, names_to = \"yearmonth\", values_to = \"Imports\" )\n\nexportDataSlope <- exportDataSlope %>%\n  pivot_longer(cols = 2:38, names_to = \"yearmonth\", values_to = \"Exports\" )\n\ncolnames(importDataSlope) <- c(\"Country\", \"yearmonth\", \"Imports\")\ncolnames(exportDataSlope) <- c(\"Country\", \"yearmonth\", \"Exports\")\n\nimportDataSlope$Imports <- ifelse(grepl(\"(Thousand Dollars)\", importDataSlope$Country, fixed = TRUE), importDataSlope$Imports/1000, importDataSlope$Imports)\nexportDataSlope$Exports <- ifelse(grepl(\"(Thousand Dollars)\", exportDataSlope$Country, fixed = TRUE), exportDataSlope$Exports/1000, exportDataSlope$Exports)\n\nimportDataSlope$Country<-gsub(\" [(]Thousand Dollars[)]\",\"\",as.character(importDataSlope$Country))\nexportDataSlope$Country<-gsub(\" [(]Thousand Dollars[)]\",\"\",as.character(exportDataSlope$Country))\nimportDataSlope$Country<-gsub(\" [(]Million Dollars[)]\",\"\",as.character(importDataSlope$Country))\nexportDataSlope$Country<-gsub(\" [(]Million Dollars[)]\",\"\",as.character(exportDataSlope$Country))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#for-cycleplot",
    "href": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#for-cycleplot",
    "title": "Take-Home_Ex04",
    "section": "For cycleplot",
    "text": "For cycleplot\n\nimportData <- read_xlsx(\"./data.xlsx\", \"Import\", range = \"A1:AL120\")\nexportData <- read_xlsx(\"./data.xlsx\", \"Export\", range = \"A1:AL92\")\n\nimportData <- importData %>%\n  pivot_longer(cols = 2:38, names_to = \"year-month\", values_to = \"Imports\" ) %>%\n  pivot_wider(names_from = 'Data Series', values_from = \"Imports\") %>%\n  mutate_at(vars(contains('Thousand Dollars')), ~ (. /1000))\n\nexportData <- exportData %>%\n  pivot_longer(cols = 2:38, names_to = \"year-month\", values_to = \"Exports\" ) %>%\n  pivot_wider(names_from = 'Data Series', values_from = \"Exports\") %>%\n  mutate_at(vars(contains('Thousand Dollars')), ~ (. /1000))\n\ncolnames(importData) <- gsub(\" (Thousand Dollars)\", \"\", colnames(importData), fixed = TRUE)\ncolnames(importData) <- gsub(\" (Million Dollars)\", \"\", colnames(importData), fixed = TRUE)\n\ncolnames(exportData) <- gsub(\" (Thousand Dollars)\", \"\", colnames(exportData), fixed = TRUE)\ncolnames(exportData) <- gsub(\" (Million Dollars)\", \"\", colnames(exportData), fixed = TRUE)\n\nimportData <- importData %>% \n  mutate('date' = ym(importData$'year-month'))\n\nexportData <- exportData %>% \n  mutate('date' = ym(exportData$'year-month'))\n\nimportData$month <- factor(month(importData$`date`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nimportData$year <- year(ym(importData$`year-month`))\n\nexportData$month <- factor(month(exportData$`date`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nexportData$year <- year(ym(exportData$`year-month`))\n\nexportData <- exportData %>% filter(year %in% c(2020, 2021, 2022))\nimportData <- importData %>% filter(year %in% c(2020, 2021, 2022))\n\n\nImport Data for SlopeExport Data for SlopeImport Data for CycleExport Data for Cycle\n\n\n\n\n\n\n\nCountry\nyearmonth\nImports\n\n\n\n\nTotal Merchandise Imports\n2023 Jan\n44393.66\n\n\nTotal Merchandise Imports\n2022 Dec\n49869.77\n\n\nTotal Merchandise Imports\n2022 Nov\n50653.91\n\n\nTotal Merchandise Imports\n2022 Oct\n53182.94\n\n\nTotal Merchandise Imports\n2022 Sep\n55799.31\n\n\nTotal Merchandise Imports\n2022 Aug\n58466.01\n\n\n\n\n\n\n\n\n\n\n\n\nCountry\nyearmonth\nExports\n\n\n\n\nTotal Merchandise Exports\n2023 Jan\n49575.21\n\n\nTotal Merchandise Exports\n2022 Dec\n55000.08\n\n\nTotal Merchandise Exports\n2022 Nov\n54162.78\n\n\nTotal Merchandise Exports\n2022 Oct\n56576.35\n\n\nTotal Merchandise Exports\n2022 Sep\n62507.13\n\n\nTotal Merchandise Exports\n2022 Aug\n63363.75\n\n\n\n\n\n\n\n\nkable(head(importData))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nyear-month\nTotal Merchandise Imports\nAmerica\nAsia\nEurope\nOceania\nAfrica\nEuropean Union\nBelgium\nDenmark\nFrance\nGermany, Federal Republic Of\nGreece\nIreland\nItaly\nLuxembourg\nNetherlands\nUnited Kingdom\nPortugal\nSpain\nAustria\nFinland\nNorway\nSweden\nSwitzerland\nLiechtenstein\nMalta\nGermany, Democratic Republic Of\nHungary\nPoland\nEstonia\nLatvia\nLithuania\nSlovenia\nCzech Republic\nSlovak Republic (Slovakia)\nBrunei Darussalam\nIndonesia\nMalaysia\nPhilippines\nThailand\nMyanmar\nCambodia\nLaos People’s Democratic Republic\nVietnam, Socialist Republic Of\nJapan\nHong Kong\nRepublic Of Korea\nTaiwan\nMacau\nMainland China\nAfghanistan\nBangladesh\nIndia\nMaldives, Republic Of\nNepal\nPakistan\nSri Lanka\nBahrain\nCyprus\nIran (Islamic Republic Of)\nIsrael\nJordan\nKuwait\nLebanon\nOman\nQatar\nSaudi Arabia\nSyrian Arab Republic\nUnited Arab Emirates\nYemen\nYemen Democratic\nCanada\nPuerto Rico\nUnited States\nArgentina\nBrazil\nChile\nColombia\nEcuador\nMexico\nParaguay\nPeru\nUruguay\nVenezuela\nNetherlands Antilles\nPanama\nBahamas\nBermuda\nFrench Guiana\nGrenada\nGuatemala\nHonduras\nJamaica\nSt Vincent & The Grenadines\nTrinidad & Tobago\nAnguilla\nOther Countries In America\nAustralia\nFiji\nNauru\nNew Caledonia\nNew Zealand\nPapua New Guinea\nCocos (Keeling) Islands\nFrench Southern Territories\nNorfolk Island\nCook Islands\nFrench Polynesia\nGuam\nKiribati\nNiue\nSolomon Islands\nTuvalu\nWallis & Fatuna Islands\nMicronesia\nPalau\nSouth Sudan\nOther Countries In Oceania\nCommonwealth Of Independent States\ndate\nmonth\nyear\n\n\n\n\n2022 Dec\n49869.77\n6901.5\n33611.7\n7541.8\n1399.9\n414.9\n5058.8\n103.655\n67.665\n1537.347\n1129.542\n99.085\n106.678\n702.472\n8.156\n384.010\n940.088\n31.026\n262.629\n104.665\n42.399\n50.581\n162.253\n992.687\n2.250\n41.040\n0\n44.406\n61.324\n5.378\n4.288\n13.594\n7.106\n69.549\n9.115\n143.124\n2074.781\n6017.970\n592.778\n1116.398\n7.486\n25.899\n7.281\n567.388\n2618.288\n240.017\n3207.322\n5357.878\n1.376\n7642.587\n0.061\n27.270\n834.657\n0.103\n0.221\n7.334\n10.737\n44.949\n21.698\n0.317\n98.717\n8.265\n0.639\n0.332\n72.624\n640.131\n801.168\n0.000\n1212.293\n0.629\n0\n211.232\n8.375\n5314.219\n11.273\n1004.171\n16.649\n7.915\n4.475\n277.739\n0.681\n3.464\n0.635\n0.089\n0\n0.127\n0.011\n0.000\n0.123\n0.006\n0.570\n1.457\n0.093\n0.000\n0.064\n0.000\n37.931\n1253.373\n0.243\n0.014\n0.018\n122.266\n23.124\n0.002\n0.046\n0.001\n0.000\n0.210\n0.035\n0.000\n0.080\n0.003\n0.000\n0\n0.029\n0.001\n33.107\n1.577\n559.381\n2022-12-01\nDec\n2022\n\n\n2022 Nov\n50653.91\n7529.4\n34733.7\n7242.8\n664.4\n483.6\n4961.4\n121.773\n67.436\n1563.127\n1107.630\n37.937\n118.525\n725.004\n5.714\n301.384\n1050.419\n33.086\n245.875\n105.084\n49.148\n43.134\n196.484\n949.410\n3.686\n23.080\n0\n46.849\n59.504\n6.972\n6.436\n8.716\n8.502\n77.729\n7.487\n121.051\n1971.918\n6773.423\n581.054\n1241.990\n6.044\n16.407\n4.963\n488.956\n2837.697\n169.227\n2863.026\n5319.407\n17.054\n8285.837\n0.026\n25.709\n837.673\n0.145\n0.612\n10.169\n12.169\n11.520\n2.385\n0.267\n85.965\n7.262\n54.562\n0.578\n60.005\n476.149\n866.619\n0.000\n1205.738\n0.106\n0\n224.872\n16.518\n5832.049\n6.775\n1132.945\n13.831\n4.436\n2.745\n242.881\n0.281\n2.155\n0.779\n0.720\n0\n0.116\n0.004\n0.004\n0.517\n0.019\n0.997\n0.838\n0.117\n0.000\n2.854\n0.000\n43.918\n577.829\n0.191\n0.000\n0.256\n72.677\n12.724\n0.000\n0.099\n0.000\n0.000\n0.035\n0.104\n0.003\n0.000\n0.013\n0.000\n0\n0.008\n0.000\n27.952\n3.090\n355.213\n2022-11-01\nNov\n2022\n\n\n2022 Oct\n53182.94\n7666.4\n36120.9\n7475.9\n1329.8\n589.9\n4685.2\n88.796\n63.719\n1493.161\n1122.251\n15.850\n157.648\n594.994\n15.746\n263.199\n859.994\n39.971\n184.146\n101.231\n49.749\n40.090\n180.230\n1811.943\n2.650\n51.734\n0\n42.761\n72.936\n5.489\n2.299\n5.892\n8.759\n78.066\n9.522\n214.994\n1987.191\n6417.377\n646.820\n1431.165\n5.856\n9.089\n16.907\n522.441\n3038.903\n207.166\n3044.583\n6484.560\n2.341\n7377.473\n0.009\n18.536\n826.855\n0.014\n0.688\n6.327\n14.721\n66.675\n2.034\n0.692\n93.452\n3.020\n52.798\n0.449\n108.470\n528.921\n1010.564\n0.003\n1642.118\n0.265\n0\n213.606\n5.480\n6163.496\n14.908\n917.460\n11.567\n2.200\n4.893\n272.680\n0.487\n11.670\n1.123\n0.885\n0\n0.175\n0.004\n0.000\n12.899\n0.001\n0.262\n0.706\n0.061\n0.002\n0.031\n0.001\n44.771\n1246.296\n0.170\n0.000\n0.014\n72.719\n10.221\n0.002\n0.115\n0.000\n0.000\n0.060\n0.065\n0.000\n0.001\n0.021\n0.001\n0\n0.005\n0.000\n0.000\n0.269\n211.147\n2022-10-01\nOct\n2022\n\n\n2022 Sep\n55799.31\n7995.9\n37696.3\n8167.6\n1544.6\n395.0\n5145.8\n215.978\n61.842\n1660.563\n1170.472\n107.888\n118.936\n547.587\n55.482\n314.814\n1131.385\n47.500\n209.987\n130.438\n48.419\n41.524\n143.127\n1758.858\n3.558\n23.836\n0\n38.367\n82.610\n7.789\n2.679\n8.406\n7.816\n73.954\n7.399\n208.537\n1924.895\n7672.003\n599.147\n1343.781\n6.949\n12.607\n20.214\n594.893\n3109.529\n354.257\n3113.799\n5683.947\n0.436\n7390.866\n0.019\n18.308\n1023.746\n0.043\n0.602\n5.272\n13.436\n2.744\n1.662\n0.258\n143.055\n8.904\n16.848\n0.303\n42.137\n766.915\n954.922\n0.017\n2315.066\n0.048\n0\n241.035\n9.831\n6537.215\n13.163\n833.293\n29.599\n10.518\n2.522\n263.872\n0.235\n14.741\n3.311\n0.238\n0\n0.328\n0.004\n0.003\n0.296\n0.003\n0.926\n0.432\n0.493\n0.021\n0.058\n0.000\n35.101\n1447.901\n0.498\n0.008\n0.262\n79.919\n14.332\n0.000\n0.242\n0.000\n0.023\n0.037\n0.176\n0.000\n0.003\n0.004\n0.000\n0\n0.010\n0.000\n14.777\n0.664\n192.289\n2022-09-01\nSep\n2022\n\n\n2022 Aug\n58466.01\n8633.8\n40911.9\n7433.2\n935.9\n551.2\n5131.0\n132.917\n126.150\n1624.646\n1135.242\n170.197\n193.225\n592.000\n31.284\n339.001\n753.406\n45.507\n200.170\n105.197\n38.114\n36.231\n107.557\n1420.434\n3.380\n40.703\n0\n39.917\n64.268\n7.588\n3.549\n6.345\n7.957\n76.026\n10.549\n311.958\n2301.232\n7225.607\n1121.526\n1511.871\n8.313\n21.829\n36.150\n688.285\n3100.676\n319.470\n3841.813\n7174.679\n3.219\n8196.629\n0.107\n36.996\n908.131\n0.037\n0.559\n9.692\n12.789\n7.085\n2.499\n0.255\n126.174\n3.782\n56.351\n0.337\n73.156\n827.737\n1081.996\n0.000\n1629.843\n0.151\n0\n599.499\n14.898\n6575.058\n11.801\n968.690\n75.458\n9.806\n1.931\n247.995\n0.513\n1.888\n0.806\n0.803\n0\n0.424\n0.000\n0.002\n0.431\n0.008\n2.170\n0.793\n0.137\n0.000\n80.568\n0.009\n40.996\n696.980\n0.185\n0.000\n0.186\n133.089\n104.656\n0.007\n0.008\n0.101\n0.000\n0.038\n0.086\n0.000\n0.000\n0.002\n0.000\n0\n0.010\n0.006\n0.000\n0.441\n170.747\n2022-08-01\nAug\n2022\n\n\n2022 Jul\n61029.37\n7879.7\n43214.2\n8300.5\n1060.6\n574.4\n5233.5\n224.676\n55.752\n1555.500\n1207.446\n207.744\n107.148\n570.591\n9.766\n359.653\n802.819\n46.337\n178.600\n118.935\n91.645\n49.789\n181.260\n1937.455\n3.229\n54.619\n0\n48.975\n57.608\n8.844\n3.910\n3.338\n7.600\n82.010\n10.839\n248.815\n2032.018\n7243.882\n1358.580\n1636.787\n7.363\n27.796\n1.707\n759.728\n3440.363\n624.415\n4382.579\n7306.972\n0.982\n8510.236\n0.082\n18.815\n1022.364\n0.021\n0.632\n4.988\n13.242\n165.713\n1.199\n0.044\n99.014\n5.333\n117.344\n0.475\n71.377\n692.186\n1003.667\n0.000\n2225.339\n0.499\n0\n284.927\n16.567\n6158.055\n10.327\n928.891\n20.111\n1.927\n2.226\n402.686\n0.423\n3.042\n5.398\n0.442\n0\n0.131\n0.006\n0.001\n0.359\n0.000\n3.463\n0.780\n0.024\n0.000\n3.033\n0.000\n40.731\n924.529\n0.601\n0.000\n0.025\n97.855\n21.087\n0.001\n0.004\n0.000\n0.000\n0.493\n12.160\n0.000\n0.000\n0.000\n0.000\n0\n0.008\n0.000\n0.012\n2.880\n268.726\n2022-07-01\nJul\n2022\n\n\n\n\n\n\n\n\nkable(head(exportData))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nyear-month\nTotal Merchandise Exports\nAmerica\nAsia\nEurope\nOceania\nAfrica\nEuropean Union\nBelgium\nDenmark\nFrance\nGermany, Federal Republic Of\nGreece\nIreland\nItaly\nLuxembourg\nNetherlands\nUnited Kingdom\nPortugal\nSpain\nAustria\nFinland\nSweden\nSwitzerland\nMalta\nGermany, Democratic Republic Of\nHungary\nPoland\nEstonia\nLatvia\nLithuania\nSlovenia\nCzech Republic\nSlovak Republic (Slovakia)\nBrunei Darussalam\nIndonesia\nMalaysia\nPhilippines\nThailand\nMyanmar\nCambodia\nLaos People’s Democratic Republic\nVietnam, Socialist Republic Of\nJapan\nHong Kong\nRepublic Of Korea\nTaiwan\nMacau\nMainland China\nAfghanistan\nBangladesh\nIndia\nMaldives, Republic Of\nNepal\nPakistan\nSri Lanka\nBahrain\nCyprus\nIran (Islamic Republic Of)\nIsrael\nJordan\nKuwait\nLebanon\nOman\nQatar\nSaudi Arabia\nSyrian Arab Republic\nUnited Arab Emirates\nYemen\nYemen Democratic\nCanada\nPuerto Rico\nUnited States\nArgentina\nBrazil\nChile\nColombia\nEcuador\nMexico\nParaguay\nPeru\nUruguay\nVenezuela\nAustralia\nFiji\nNew Caledonia\nNew Zealand\nPapua New Guinea\nFrench Polynesia\nGuam\nSolomon Islands\nOther Countries In Oceania\ndate\nmonth\nyear\n\n\n\n\n2022 Dec\n55000.08\n6217.5\n39734.8\n4924.4\n3034.8\n1088.6\n4137.1\n432.376\n31.084\n402.218\n809.343\n131.220\n177.243\n128.641\n25.910\n1243.341\n360.897\n123.349\n46.151\n49.367\n71.732\n14.099\n311.701\n243.227\n0\n47.775\n53.076\n0.683\n7.434\n1.248\n4.546\n23.443\n1.217\n75.900\n3740.306\n5154.779\n1116.549\n1790.423\n449.544\n195.030\n4.643\n1958.783\n2271.626\n7403.998\n2865.718\n2768.573\n29.319\n6374.198\n0.214\n294.037\n1703.023\n27.931\n18.692\n183.923\n134.049\n24.163\n48.818\n0.510\n105.746\n15.012\n46.086\n1.729\n18.234\n64.520\n102.899\n0.260\n625.765\n0.566\n0\n113.586\n4.234\n4671.228\n22.119\n227.374\n8.570\n12.036\n7.249\n224.874\n0.563\n11.791\n3.822\n0.039\n1711.317\n71.371\n32.546\n397.788\n84.412\n2.428\n41.150\n6.018\n691.400\n2022-12-01\nDec\n2022\n\n\n2022 Nov\n54162.78\n6394.2\n37973.2\n5025.2\n3243.1\n1527.0\n4243.4\n756.814\n29.250\n324.451\n927.112\n126.740\n33.157\n167.460\n4.663\n1190.952\n322.583\n74.028\n23.462\n40.047\n19.921\n18.936\n328.426\n245.180\n0\n63.588\n63.246\n1.005\n2.792\n3.033\n6.222\n25.261\n2.481\n65.457\n4082.822\n5557.119\n1118.234\n1762.557\n392.738\n280.992\n2.950\n1568.729\n2504.491\n5302.426\n2165.065\n2667.565\n42.902\n6773.005\n0.272\n339.772\n1467.219\n34.754\n12.037\n111.265\n133.349\n21.034\n57.791\n1.091\n122.699\n8.410\n44.896\n2.798\n16.674\n172.041\n106.397\n0.062\n901.306\n1.322\n0\n96.999\n56.271\n4787.358\n20.687\n170.736\n8.683\n13.459\n6.212\n277.119\n0.626\n8.651\n0.947\n0.482\n1794.035\n55.584\n15.556\n573.747\n80.267\n17.142\n49.396\n7.120\n650.476\n2022-11-01\nNov\n2022\n\n\n2022 Oct\n56576.35\n6653.9\n40500.8\n5121.5\n3114.5\n1185.6\n4298.1\n350.565\n67.327\n529.962\n1035.273\n121.392\n117.698\n155.578\n6.334\n1189.965\n357.153\n81.811\n32.247\n60.000\n65.311\n21.361\n362.032\n220.098\n0\n39.889\n47.942\n1.321\n7.758\n4.156\n5.236\n43.738\n11.506\n67.063\n4075.989\n6233.818\n1229.078\n1965.567\n461.908\n594.395\n7.222\n1730.554\n2406.706\n5137.172\n2330.102\n3034.201\n21.959\n7810.503\n0.345\n465.380\n1395.949\n21.845\n13.355\n66.674\n93.118\n121.596\n62.302\n2.586\n78.544\n7.316\n40.943\n1.148\n45.914\n99.750\n242.241\n0.116\n573.275\n0.700\n0\n110.044\n49.109\n5070.780\n23.605\n202.358\n7.161\n16.109\n6.672\n282.600\n0.987\n7.898\n1.885\n0.676\n1628.700\n70.864\n38.811\n499.540\n102.466\n34.617\n76.617\n7.749\n658.085\n2022-10-01\nOct\n2022\n\n\n2022 Sep\n62507.13\n7091.9\n45605.1\n5155.1\n3453.3\n1201.8\n4065.4\n386.724\n44.793\n358.786\n912.066\n150.911\n61.522\n125.791\n7.283\n1181.847\n379.348\n149.219\n35.478\n60.601\n45.266\n21.764\n579.719\n248.160\n0\n60.851\n53.511\n2.292\n9.914\n2.474\n2.679\n40.588\n11.752\n81.269\n4373.980\n5884.698\n1367.212\n2241.114\n509.268\n1504.662\n27.116\n2375.792\n2481.370\n7405.741\n2896.148\n2875.136\n18.310\n7133.642\n0.453\n547.112\n1817.817\n30.156\n15.734\n226.902\n191.920\n41.003\n64.638\n0.548\n111.282\n7.608\n42.895\n1.082\n19.112\n95.392\n310.368\n0.085\n813.202\n1.464\n0\n134.488\n74.606\n5278.523\n52.858\n274.320\n44.538\n20.157\n11.642\n231.403\n1.297\n10.393\n0.969\n0.064\n1923.247\n89.525\n29.359\n528.450\n114.715\n2.743\n50.413\n9.035\n708.359\n2022-09-01\nSep\n2022\n\n\n2022 Aug\n63363.75\n7931.0\n44106.2\n6109.6\n3608.4\n1608.5\n5020.5\n570.824\n42.761\n454.328\n1291.942\n191.678\n68.379\n126.344\n9.801\n1512.800\n498.657\n100.757\n41.036\n36.414\n30.590\n18.788\n440.859\n229.646\n0\n80.433\n48.436\n2.590\n4.005\n3.363\n2.361\n53.328\n8.491\n101.311\n4684.693\n6150.507\n1654.932\n2254.888\n455.447\n1087.906\n3.719\n2259.090\n2311.824\n6466.344\n2412.712\n2621.213\n26.644\n7548.001\n0.232\n534.857\n1593.916\n32.331\n16.029\n132.621\n121.017\n48.485\n70.390\n0.810\n138.756\n9.380\n34.121\n1.380\n68.168\n101.056\n119.219\n0.000\n975.155\n1.463\n0\n131.512\n32.665\n6094.432\n43.246\n258.914\n12.651\n17.219\n10.004\n258.392\n0.283\n9.050\n2.100\n0.136\n2060.828\n49.089\n39.826\n471.479\n75.179\n4.153\n73.882\n13.854\n823.524\n2022-08-01\nAug\n2022\n\n\n2022 Jul\n64124.99\n6731.2\n46129.5\n6250.6\n3916.1\n1097.6\n5497.0\n991.586\n48.586\n459.094\n1279.156\n166.037\n109.400\n120.489\n27.007\n1477.881\n405.922\n141.847\n52.271\n30.552\n50.463\n19.968\n246.381\n243.500\n0\n58.378\n57.658\n1.676\n9.284\n2.261\n6.190\n36.867\n7.196\n107.918\n5333.607\n6672.175\n1430.283\n2197.398\n737.588\n1698.433\n6.565\n2086.867\n2327.064\n6138.562\n2397.646\n3301.359\n16.838\n7792.074\n0.240\n555.989\n1637.019\n18.970\n18.883\n313.964\n73.049\n10.775\n68.329\n0.374\n153.543\n12.002\n20.377\n1.505\n78.456\n96.592\n131.655\n0.147\n586.314\n0.567\n0\n98.556\n88.272\n4854.897\n14.329\n215.066\n45.894\n12.527\n6.480\n374.213\n0.222\n9.116\n2.455\n0.261\n2252.228\n66.873\n53.846\n626.090\n117.535\n22.831\n31.277\n21.651\n728.717\n2022-07-01\nJul\n2022"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#loading-and-cleaning-data",
    "href": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#loading-and-cleaning-data",
    "title": "Take-Home_Ex04",
    "section": "Loading and Cleaning Data",
    "text": "Loading and Cleaning Data\n“Merchandise Trade provided by Department of Statistics, Singapore (DOS)” is taken from Department of Statistics website and prepared for visualisation.\n\nData Cleanup steps\n\nData is imported to variables.\nPivot to rearrange as per needs.\nRename columns for ease of use in later stage.\nAll data is converted to be in Millions.\nRenaming Country values to remove units like Thousand Dollars/Million dollars.\nMutate to add year/month seperate from year-month format.\nFilter data to contain only 2020-2022 values.\n\n\n\nFor Slopegraph\n\nimportDataSlope <- read_xlsx(\"./data.xlsx\", \"Import\", range = \"A1:AL120\")\nexportDataSlope <- read_xlsx(\"./data.xlsx\", \"Export\", range = \"A1:AL92\")\n\nimportDataSlope <- importDataSlope %>%\n  pivot_longer(cols = 2:38, names_to = \"yearmonth\", values_to = \"Imports\" )\n\nexportDataSlope <- exportDataSlope %>%\n  pivot_longer(cols = 2:38, names_to = \"yearmonth\", values_to = \"Exports\" )\n\ncolnames(importDataSlope) <- c(\"Country\", \"yearmonth\", \"Imports\")\ncolnames(exportDataSlope) <- c(\"Country\", \"yearmonth\", \"Exports\")\n\nimportDataSlope$Imports <- ifelse(grepl(\"(Thousand Dollars)\", importDataSlope$Country, fixed = TRUE), importDataSlope$Imports/1000, importDataSlope$Imports)\nexportDataSlope$Exports <- ifelse(grepl(\"(Thousand Dollars)\", exportDataSlope$Country, fixed = TRUE), exportDataSlope$Exports/1000, exportDataSlope$Exports)\n\nimportDataSlope$Country<-gsub(\" [(]Thousand Dollars[)]\",\"\",as.character(importDataSlope$Country))\nexportDataSlope$Country<-gsub(\" [(]Thousand Dollars[)]\",\"\",as.character(exportDataSlope$Country))\nimportDataSlope$Country<-gsub(\" [(]Million Dollars[)]\",\"\",as.character(importDataSlope$Country))\nexportDataSlope$Country<-gsub(\" [(]Million Dollars[)]\",\"\",as.character(exportDataSlope$Country))\n\n\n\nFor cycleplot\n\nimportData <- read_xlsx(\"./data.xlsx\", \"Import\", range = \"A1:AL120\")\nexportData <- read_xlsx(\"./data.xlsx\", \"Export\", range = \"A1:AL92\")\n\nimportData <- importData %>%\n  pivot_longer(cols = 2:38, names_to = \"year-month\", values_to = \"Imports\" ) %>%\n  pivot_wider(names_from = 'Data Series', values_from = \"Imports\") %>%\n  mutate_at(vars(contains('Thousand Dollars')), ~ (. /1000))\n\nexportData <- exportData %>%\n  pivot_longer(cols = 2:38, names_to = \"year-month\", values_to = \"Exports\" ) %>%\n  pivot_wider(names_from = 'Data Series', values_from = \"Exports\") %>%\n  mutate_at(vars(contains('Thousand Dollars')), ~ (. /1000))\n\ncolnames(importData) <- gsub(\" (Thousand Dollars)\", \"\", colnames(importData), fixed = TRUE)\ncolnames(importData) <- gsub(\" (Million Dollars)\", \"\", colnames(importData), fixed = TRUE)\n\ncolnames(exportData) <- gsub(\" (Thousand Dollars)\", \"\", colnames(exportData), fixed = TRUE)\ncolnames(exportData) <- gsub(\" (Million Dollars)\", \"\", colnames(exportData), fixed = TRUE)\n\nimportData <- importData %>% \n  mutate('date' = ym(importData$'year-month'))\n\nexportData <- exportData %>% \n  mutate('date' = ym(exportData$'year-month'))\n\nimportData$month <- factor(month(importData$`date`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nimportData$year <- year(ym(importData$`year-month`))\n\nexportData$month <- factor(month(exportData$`date`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nexportData$year <- year(ym(exportData$`year-month`))\n\nexportData <- exportData %>% filter(year %in% c(2020, 2021, 2022))\nimportData <- importData %>% filter(year %in% c(2020, 2021, 2022))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#data-after-cleanup",
    "href": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#data-after-cleanup",
    "title": "Take-Home_Ex04",
    "section": "Data after cleanup",
    "text": "Data after cleanup\n\nImport Data for SlopegraphExport Data for SlopegraphImport Data for CycleplotExport Data for Cycleplot\n\n\n\nkable(head(importDataSlope))\n\n\n\n\nCountry\nyearmonth\nImports\n\n\n\n\nTotal Merchandise Imports\n2023 Jan\n44393.66\n\n\nTotal Merchandise Imports\n2022 Dec\n49869.77\n\n\nTotal Merchandise Imports\n2022 Nov\n50653.91\n\n\nTotal Merchandise Imports\n2022 Oct\n53182.94\n\n\nTotal Merchandise Imports\n2022 Sep\n55799.31\n\n\nTotal Merchandise Imports\n2022 Aug\n58466.01\n\n\n\n\n\n\n\n\nkable(head(exportDataSlope))\n\n\n\n\nCountry\nyearmonth\nExports\n\n\n\n\nTotal Merchandise Exports\n2023 Jan\n49575.21\n\n\nTotal Merchandise Exports\n2022 Dec\n55000.08\n\n\nTotal Merchandise Exports\n2022 Nov\n54162.78\n\n\nTotal Merchandise Exports\n2022 Oct\n56576.35\n\n\nTotal Merchandise Exports\n2022 Sep\n62507.13\n\n\nTotal Merchandise Exports\n2022 Aug\n63363.75\n\n\n\n\n\n\n\n\nkable(head(importData))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nyear-month\nTotal Merchandise Imports\nAmerica\nAsia\nEurope\nOceania\nAfrica\nEuropean Union\nBelgium\nDenmark\nFrance\nGermany, Federal Republic Of\nGreece\nIreland\nItaly\nLuxembourg\nNetherlands\nUnited Kingdom\nPortugal\nSpain\nAustria\nFinland\nNorway\nSweden\nSwitzerland\nLiechtenstein\nMalta\nGermany, Democratic Republic Of\nHungary\nPoland\nEstonia\nLatvia\nLithuania\nSlovenia\nCzech Republic\nSlovak Republic (Slovakia)\nBrunei Darussalam\nIndonesia\nMalaysia\nPhilippines\nThailand\nMyanmar\nCambodia\nLaos People’s Democratic Republic\nVietnam, Socialist Republic Of\nJapan\nHong Kong\nRepublic Of Korea\nTaiwan\nMacau\nMainland China\nAfghanistan\nBangladesh\nIndia\nMaldives, Republic Of\nNepal\nPakistan\nSri Lanka\nBahrain\nCyprus\nIran (Islamic Republic Of)\nIsrael\nJordan\nKuwait\nLebanon\nOman\nQatar\nSaudi Arabia\nSyrian Arab Republic\nUnited Arab Emirates\nYemen\nYemen Democratic\nCanada\nPuerto Rico\nUnited States\nArgentina\nBrazil\nChile\nColombia\nEcuador\nMexico\nParaguay\nPeru\nUruguay\nVenezuela\nNetherlands Antilles\nPanama\nBahamas\nBermuda\nFrench Guiana\nGrenada\nGuatemala\nHonduras\nJamaica\nSt Vincent & The Grenadines\nTrinidad & Tobago\nAnguilla\nOther Countries In America\nAustralia\nFiji\nNauru\nNew Caledonia\nNew Zealand\nPapua New Guinea\nCocos (Keeling) Islands\nFrench Southern Territories\nNorfolk Island\nCook Islands\nFrench Polynesia\nGuam\nKiribati\nNiue\nSolomon Islands\nTuvalu\nWallis & Fatuna Islands\nMicronesia\nPalau\nSouth Sudan\nOther Countries In Oceania\nCommonwealth Of Independent States\ndate\nmonth\nyear\n\n\n\n\n2022 Dec\n49869.77\n6901.5\n33611.7\n7541.8\n1399.9\n414.9\n5058.8\n103.655\n67.665\n1537.347\n1129.542\n99.085\n106.678\n702.472\n8.156\n384.010\n940.088\n31.026\n262.629\n104.665\n42.399\n50.581\n162.253\n992.687\n2.250\n41.040\n0\n44.406\n61.324\n5.378\n4.288\n13.594\n7.106\n69.549\n9.115\n143.124\n2074.781\n6017.970\n592.778\n1116.398\n7.486\n25.899\n7.281\n567.388\n2618.288\n240.017\n3207.322\n5357.878\n1.376\n7642.587\n0.061\n27.270\n834.657\n0.103\n0.221\n7.334\n10.737\n44.949\n21.698\n0.317\n98.717\n8.265\n0.639\n0.332\n72.624\n640.131\n801.168\n0.000\n1212.293\n0.629\n0\n211.232\n8.375\n5314.219\n11.273\n1004.171\n16.649\n7.915\n4.475\n277.739\n0.681\n3.464\n0.635\n0.089\n0\n0.127\n0.011\n0.000\n0.123\n0.006\n0.570\n1.457\n0.093\n0.000\n0.064\n0.000\n37.931\n1253.373\n0.243\n0.014\n0.018\n122.266\n23.124\n0.002\n0.046\n0.001\n0.000\n0.210\n0.035\n0.000\n0.080\n0.003\n0.000\n0\n0.029\n0.001\n33.107\n1.577\n559.381\n2022-12-01\nDec\n2022\n\n\n2022 Nov\n50653.91\n7529.4\n34733.7\n7242.8\n664.4\n483.6\n4961.4\n121.773\n67.436\n1563.127\n1107.630\n37.937\n118.525\n725.004\n5.714\n301.384\n1050.419\n33.086\n245.875\n105.084\n49.148\n43.134\n196.484\n949.410\n3.686\n23.080\n0\n46.849\n59.504\n6.972\n6.436\n8.716\n8.502\n77.729\n7.487\n121.051\n1971.918\n6773.423\n581.054\n1241.990\n6.044\n16.407\n4.963\n488.956\n2837.697\n169.227\n2863.026\n5319.407\n17.054\n8285.837\n0.026\n25.709\n837.673\n0.145\n0.612\n10.169\n12.169\n11.520\n2.385\n0.267\n85.965\n7.262\n54.562\n0.578\n60.005\n476.149\n866.619\n0.000\n1205.738\n0.106\n0\n224.872\n16.518\n5832.049\n6.775\n1132.945\n13.831\n4.436\n2.745\n242.881\n0.281\n2.155\n0.779\n0.720\n0\n0.116\n0.004\n0.004\n0.517\n0.019\n0.997\n0.838\n0.117\n0.000\n2.854\n0.000\n43.918\n577.829\n0.191\n0.000\n0.256\n72.677\n12.724\n0.000\n0.099\n0.000\n0.000\n0.035\n0.104\n0.003\n0.000\n0.013\n0.000\n0\n0.008\n0.000\n27.952\n3.090\n355.213\n2022-11-01\nNov\n2022\n\n\n2022 Oct\n53182.94\n7666.4\n36120.9\n7475.9\n1329.8\n589.9\n4685.2\n88.796\n63.719\n1493.161\n1122.251\n15.850\n157.648\n594.994\n15.746\n263.199\n859.994\n39.971\n184.146\n101.231\n49.749\n40.090\n180.230\n1811.943\n2.650\n51.734\n0\n42.761\n72.936\n5.489\n2.299\n5.892\n8.759\n78.066\n9.522\n214.994\n1987.191\n6417.377\n646.820\n1431.165\n5.856\n9.089\n16.907\n522.441\n3038.903\n207.166\n3044.583\n6484.560\n2.341\n7377.473\n0.009\n18.536\n826.855\n0.014\n0.688\n6.327\n14.721\n66.675\n2.034\n0.692\n93.452\n3.020\n52.798\n0.449\n108.470\n528.921\n1010.564\n0.003\n1642.118\n0.265\n0\n213.606\n5.480\n6163.496\n14.908\n917.460\n11.567\n2.200\n4.893\n272.680\n0.487\n11.670\n1.123\n0.885\n0\n0.175\n0.004\n0.000\n12.899\n0.001\n0.262\n0.706\n0.061\n0.002\n0.031\n0.001\n44.771\n1246.296\n0.170\n0.000\n0.014\n72.719\n10.221\n0.002\n0.115\n0.000\n0.000\n0.060\n0.065\n0.000\n0.001\n0.021\n0.001\n0\n0.005\n0.000\n0.000\n0.269\n211.147\n2022-10-01\nOct\n2022\n\n\n2022 Sep\n55799.31\n7995.9\n37696.3\n8167.6\n1544.6\n395.0\n5145.8\n215.978\n61.842\n1660.563\n1170.472\n107.888\n118.936\n547.587\n55.482\n314.814\n1131.385\n47.500\n209.987\n130.438\n48.419\n41.524\n143.127\n1758.858\n3.558\n23.836\n0\n38.367\n82.610\n7.789\n2.679\n8.406\n7.816\n73.954\n7.399\n208.537\n1924.895\n7672.003\n599.147\n1343.781\n6.949\n12.607\n20.214\n594.893\n3109.529\n354.257\n3113.799\n5683.947\n0.436\n7390.866\n0.019\n18.308\n1023.746\n0.043\n0.602\n5.272\n13.436\n2.744\n1.662\n0.258\n143.055\n8.904\n16.848\n0.303\n42.137\n766.915\n954.922\n0.017\n2315.066\n0.048\n0\n241.035\n9.831\n6537.215\n13.163\n833.293\n29.599\n10.518\n2.522\n263.872\n0.235\n14.741\n3.311\n0.238\n0\n0.328\n0.004\n0.003\n0.296\n0.003\n0.926\n0.432\n0.493\n0.021\n0.058\n0.000\n35.101\n1447.901\n0.498\n0.008\n0.262\n79.919\n14.332\n0.000\n0.242\n0.000\n0.023\n0.037\n0.176\n0.000\n0.003\n0.004\n0.000\n0\n0.010\n0.000\n14.777\n0.664\n192.289\n2022-09-01\nSep\n2022\n\n\n2022 Aug\n58466.01\n8633.8\n40911.9\n7433.2\n935.9\n551.2\n5131.0\n132.917\n126.150\n1624.646\n1135.242\n170.197\n193.225\n592.000\n31.284\n339.001\n753.406\n45.507\n200.170\n105.197\n38.114\n36.231\n107.557\n1420.434\n3.380\n40.703\n0\n39.917\n64.268\n7.588\n3.549\n6.345\n7.957\n76.026\n10.549\n311.958\n2301.232\n7225.607\n1121.526\n1511.871\n8.313\n21.829\n36.150\n688.285\n3100.676\n319.470\n3841.813\n7174.679\n3.219\n8196.629\n0.107\n36.996\n908.131\n0.037\n0.559\n9.692\n12.789\n7.085\n2.499\n0.255\n126.174\n3.782\n56.351\n0.337\n73.156\n827.737\n1081.996\n0.000\n1629.843\n0.151\n0\n599.499\n14.898\n6575.058\n11.801\n968.690\n75.458\n9.806\n1.931\n247.995\n0.513\n1.888\n0.806\n0.803\n0\n0.424\n0.000\n0.002\n0.431\n0.008\n2.170\n0.793\n0.137\n0.000\n80.568\n0.009\n40.996\n696.980\n0.185\n0.000\n0.186\n133.089\n104.656\n0.007\n0.008\n0.101\n0.000\n0.038\n0.086\n0.000\n0.000\n0.002\n0.000\n0\n0.010\n0.006\n0.000\n0.441\n170.747\n2022-08-01\nAug\n2022\n\n\n2022 Jul\n61029.37\n7879.7\n43214.2\n8300.5\n1060.6\n574.4\n5233.5\n224.676\n55.752\n1555.500\n1207.446\n207.744\n107.148\n570.591\n9.766\n359.653\n802.819\n46.337\n178.600\n118.935\n91.645\n49.789\n181.260\n1937.455\n3.229\n54.619\n0\n48.975\n57.608\n8.844\n3.910\n3.338\n7.600\n82.010\n10.839\n248.815\n2032.018\n7243.882\n1358.580\n1636.787\n7.363\n27.796\n1.707\n759.728\n3440.363\n624.415\n4382.579\n7306.972\n0.982\n8510.236\n0.082\n18.815\n1022.364\n0.021\n0.632\n4.988\n13.242\n165.713\n1.199\n0.044\n99.014\n5.333\n117.344\n0.475\n71.377\n692.186\n1003.667\n0.000\n2225.339\n0.499\n0\n284.927\n16.567\n6158.055\n10.327\n928.891\n20.111\n1.927\n2.226\n402.686\n0.423\n3.042\n5.398\n0.442\n0\n0.131\n0.006\n0.001\n0.359\n0.000\n3.463\n0.780\n0.024\n0.000\n3.033\n0.000\n40.731\n924.529\n0.601\n0.000\n0.025\n97.855\n21.087\n0.001\n0.004\n0.000\n0.000\n0.493\n12.160\n0.000\n0.000\n0.000\n0.000\n0\n0.008\n0.000\n0.012\n2.880\n268.726\n2022-07-01\nJul\n2022\n\n\n\n\n\n\n\n\nkable(head(exportData))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nyear-month\nTotal Merchandise Exports\nAmerica\nAsia\nEurope\nOceania\nAfrica\nEuropean Union\nBelgium\nDenmark\nFrance\nGermany, Federal Republic Of\nGreece\nIreland\nItaly\nLuxembourg\nNetherlands\nUnited Kingdom\nPortugal\nSpain\nAustria\nFinland\nSweden\nSwitzerland\nMalta\nGermany, Democratic Republic Of\nHungary\nPoland\nEstonia\nLatvia\nLithuania\nSlovenia\nCzech Republic\nSlovak Republic (Slovakia)\nBrunei Darussalam\nIndonesia\nMalaysia\nPhilippines\nThailand\nMyanmar\nCambodia\nLaos People’s Democratic Republic\nVietnam, Socialist Republic Of\nJapan\nHong Kong\nRepublic Of Korea\nTaiwan\nMacau\nMainland China\nAfghanistan\nBangladesh\nIndia\nMaldives, Republic Of\nNepal\nPakistan\nSri Lanka\nBahrain\nCyprus\nIran (Islamic Republic Of)\nIsrael\nJordan\nKuwait\nLebanon\nOman\nQatar\nSaudi Arabia\nSyrian Arab Republic\nUnited Arab Emirates\nYemen\nYemen Democratic\nCanada\nPuerto Rico\nUnited States\nArgentina\nBrazil\nChile\nColombia\nEcuador\nMexico\nParaguay\nPeru\nUruguay\nVenezuela\nAustralia\nFiji\nNew Caledonia\nNew Zealand\nPapua New Guinea\nFrench Polynesia\nGuam\nSolomon Islands\nOther Countries In Oceania\ndate\nmonth\nyear\n\n\n\n\n2022 Dec\n55000.08\n6217.5\n39734.8\n4924.4\n3034.8\n1088.6\n4137.1\n432.376\n31.084\n402.218\n809.343\n131.220\n177.243\n128.641\n25.910\n1243.341\n360.897\n123.349\n46.151\n49.367\n71.732\n14.099\n311.701\n243.227\n0\n47.775\n53.076\n0.683\n7.434\n1.248\n4.546\n23.443\n1.217\n75.900\n3740.306\n5154.779\n1116.549\n1790.423\n449.544\n195.030\n4.643\n1958.783\n2271.626\n7403.998\n2865.718\n2768.573\n29.319\n6374.198\n0.214\n294.037\n1703.023\n27.931\n18.692\n183.923\n134.049\n24.163\n48.818\n0.510\n105.746\n15.012\n46.086\n1.729\n18.234\n64.520\n102.899\n0.260\n625.765\n0.566\n0\n113.586\n4.234\n4671.228\n22.119\n227.374\n8.570\n12.036\n7.249\n224.874\n0.563\n11.791\n3.822\n0.039\n1711.317\n71.371\n32.546\n397.788\n84.412\n2.428\n41.150\n6.018\n691.400\n2022-12-01\nDec\n2022\n\n\n2022 Nov\n54162.78\n6394.2\n37973.2\n5025.2\n3243.1\n1527.0\n4243.4\n756.814\n29.250\n324.451\n927.112\n126.740\n33.157\n167.460\n4.663\n1190.952\n322.583\n74.028\n23.462\n40.047\n19.921\n18.936\n328.426\n245.180\n0\n63.588\n63.246\n1.005\n2.792\n3.033\n6.222\n25.261\n2.481\n65.457\n4082.822\n5557.119\n1118.234\n1762.557\n392.738\n280.992\n2.950\n1568.729\n2504.491\n5302.426\n2165.065\n2667.565\n42.902\n6773.005\n0.272\n339.772\n1467.219\n34.754\n12.037\n111.265\n133.349\n21.034\n57.791\n1.091\n122.699\n8.410\n44.896\n2.798\n16.674\n172.041\n106.397\n0.062\n901.306\n1.322\n0\n96.999\n56.271\n4787.358\n20.687\n170.736\n8.683\n13.459\n6.212\n277.119\n0.626\n8.651\n0.947\n0.482\n1794.035\n55.584\n15.556\n573.747\n80.267\n17.142\n49.396\n7.120\n650.476\n2022-11-01\nNov\n2022\n\n\n2022 Oct\n56576.35\n6653.9\n40500.8\n5121.5\n3114.5\n1185.6\n4298.1\n350.565\n67.327\n529.962\n1035.273\n121.392\n117.698\n155.578\n6.334\n1189.965\n357.153\n81.811\n32.247\n60.000\n65.311\n21.361\n362.032\n220.098\n0\n39.889\n47.942\n1.321\n7.758\n4.156\n5.236\n43.738\n11.506\n67.063\n4075.989\n6233.818\n1229.078\n1965.567\n461.908\n594.395\n7.222\n1730.554\n2406.706\n5137.172\n2330.102\n3034.201\n21.959\n7810.503\n0.345\n465.380\n1395.949\n21.845\n13.355\n66.674\n93.118\n121.596\n62.302\n2.586\n78.544\n7.316\n40.943\n1.148\n45.914\n99.750\n242.241\n0.116\n573.275\n0.700\n0\n110.044\n49.109\n5070.780\n23.605\n202.358\n7.161\n16.109\n6.672\n282.600\n0.987\n7.898\n1.885\n0.676\n1628.700\n70.864\n38.811\n499.540\n102.466\n34.617\n76.617\n7.749\n658.085\n2022-10-01\nOct\n2022\n\n\n2022 Sep\n62507.13\n7091.9\n45605.1\n5155.1\n3453.3\n1201.8\n4065.4\n386.724\n44.793\n358.786\n912.066\n150.911\n61.522\n125.791\n7.283\n1181.847\n379.348\n149.219\n35.478\n60.601\n45.266\n21.764\n579.719\n248.160\n0\n60.851\n53.511\n2.292\n9.914\n2.474\n2.679\n40.588\n11.752\n81.269\n4373.980\n5884.698\n1367.212\n2241.114\n509.268\n1504.662\n27.116\n2375.792\n2481.370\n7405.741\n2896.148\n2875.136\n18.310\n7133.642\n0.453\n547.112\n1817.817\n30.156\n15.734\n226.902\n191.920\n41.003\n64.638\n0.548\n111.282\n7.608\n42.895\n1.082\n19.112\n95.392\n310.368\n0.085\n813.202\n1.464\n0\n134.488\n74.606\n5278.523\n52.858\n274.320\n44.538\n20.157\n11.642\n231.403\n1.297\n10.393\n0.969\n0.064\n1923.247\n89.525\n29.359\n528.450\n114.715\n2.743\n50.413\n9.035\n708.359\n2022-09-01\nSep\n2022\n\n\n2022 Aug\n63363.75\n7931.0\n44106.2\n6109.6\n3608.4\n1608.5\n5020.5\n570.824\n42.761\n454.328\n1291.942\n191.678\n68.379\n126.344\n9.801\n1512.800\n498.657\n100.757\n41.036\n36.414\n30.590\n18.788\n440.859\n229.646\n0\n80.433\n48.436\n2.590\n4.005\n3.363\n2.361\n53.328\n8.491\n101.311\n4684.693\n6150.507\n1654.932\n2254.888\n455.447\n1087.906\n3.719\n2259.090\n2311.824\n6466.344\n2412.712\n2621.213\n26.644\n7548.001\n0.232\n534.857\n1593.916\n32.331\n16.029\n132.621\n121.017\n48.485\n70.390\n0.810\n138.756\n9.380\n34.121\n1.380\n68.168\n101.056\n119.219\n0.000\n975.155\n1.463\n0\n131.512\n32.665\n6094.432\n43.246\n258.914\n12.651\n17.219\n10.004\n258.392\n0.283\n9.050\n2.100\n0.136\n2060.828\n49.089\n39.826\n471.479\n75.179\n4.153\n73.882\n13.854\n823.524\n2022-08-01\nAug\n2022\n\n\n2022 Jul\n64124.99\n6731.2\n46129.5\n6250.6\n3916.1\n1097.6\n5497.0\n991.586\n48.586\n459.094\n1279.156\n166.037\n109.400\n120.489\n27.007\n1477.881\n405.922\n141.847\n52.271\n30.552\n50.463\n19.968\n246.381\n243.500\n0\n58.378\n57.658\n1.676\n9.284\n2.261\n6.190\n36.867\n7.196\n107.918\n5333.607\n6672.175\n1430.283\n2197.398\n737.588\n1698.433\n6.565\n2086.867\n2327.064\n6138.562\n2397.646\n3301.359\n16.838\n7792.074\n0.240\n555.989\n1637.019\n18.970\n18.883\n313.964\n73.049\n10.775\n68.329\n0.374\n153.543\n12.002\n20.377\n1.505\n78.456\n96.592\n131.655\n0.147\n586.314\n0.567\n0\n98.556\n88.272\n4854.897\n14.329\n215.066\n45.894\n12.527\n6.480\n374.213\n0.222\n9.116\n2.455\n0.261\n2252.228\n66.873\n53.846\n626.090\n117.535\n22.831\n31.277\n21.651\n728.717\n2022-07-01\nJul\n2022"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#top-trading-countries-during-the-time",
    "href": "Take-Home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#top-trading-countries-during-the-time",
    "title": "Take-Home_Ex04",
    "section": "Top Trading Countries during the time",
    "text": "Top Trading Countries during the time\n\nImportExport\n\n\n\n\n\n\n\n2021 has seen a flat or downward trends in import but 2022 has significant increase in the imports among the countries from where Singapore majorly imports. It can be due to multiple reasons.\nThere is an increase in imports overall from major trading countries but the patterns have changed. America was dominating the import trends in 2020 but in 2021 Mainland China is now the major import partner.\n\n\n\n\n\n\n\nThere is a mix of upward and downward and flat trend in 2021 but 2022 has seen major increase in exports where export to Hong Kong is significantly higher among the countries to where Singapore majorly export. Many factors may have contributed to this effect."
  }
]